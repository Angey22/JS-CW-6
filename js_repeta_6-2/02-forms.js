// Видео - 0:23:10...0:41:10
/*
 * - Событие - 'submit'
 * - Действия браузера по умолчанию
 * - Свойство elements
 * - Класс FormData - https://developer.mozilla.org/en-US/docs/Web/API/FormData
 */
// Событие 'submit' - это событие "отправки" формы (т.е. отправки набора данных, которые были введены пользователем в соответствующие поля - <inpute>), которое характерно (присуще) только кнопкам (<button>), у которых установлен - type="submit".

// Создаем переменную-ссылку на тег-form
const form = document.querySelector('.js-register-form');

// "Подписываемся" (вешаем слушатель) на событие "submit" в соответствующей форме.
form.addEventListener('submit', onFormSubmit);


// ! Когда отправляется "форма" (передаются данные из формы, и происходит событие "submit") - вкладка браузера перезагружается (согласно настроек по умолчанию браузера). Для того, чтобы предотвратить (убрать) перезагрузку соответствующей вкладки - необходимо убрать эти настройки по умолчанию в нем, относительно соответствующего события. Метод "preventDefault()" - предназначен для того, чтобы сообщить браузеру - "что если событие не обрабатывается явно (с визуальными изменениями), его действие по умолчанию не должно выполняться так, как обычно". Другими словами, метод "preventDefault()" - отключает действия браузера по умолчанию, относительно определенного события, в котором он задействован.

// Создаем "колл-бек" функцию для события "submit"
function onFormSubmit(event) {
  // Отключаем действия по умолчанию (перезагрузку вкладки) для события "submit". "event" - аргумент данной функции, который принимает значение объекта, описывающего событие "submit". 
  event.preventDefault();
  // Выводим в лог текстовое сообщение, которое отображается только в том случае, если вкладка НЕ перезагружается
  console.log('Это событие "submit" формы');
  console.log('---------------------------------------------');

  // ! Как собрать информацию с формы
  // Необходимо использовать свой-во "currentTarget" (в переводе с англ. - "текущая цель") объекта-события "event". Данное свой-во в объекте-события "event" - ссылается на тот элемент, который "прослушивает" это событие (в нашем случае - это "form").
  // Выводим в лог ссылку на тот элемент, который "прослушивает" событие "submit", используя свой-во "currentTarget".
  console.log(event.currentTarget);
  console.log('---------------------------------------------');

  // Выводим в лог подсво-во "elements"
  console.log(event.currentTarget.elements);
  console.log('=============================================');


  // ! Важно запомнить, что в стандартном объекте-события "event", в его свойстве "currentTarget.elements", хранится набор данных с именами "инпутов" (согласно их атрибутам "name" указаных в верстке) и их значениями зафиксированными в момент события - "submit". Используя это свойство стандартного объекта-события "event", можно получить доступ к данным, которые были введены пользователем в соответствующей форме окна браузера.


// !===========================================================
  // Выводим в лог значение свойства "subscription.value", в котором хранятся данные заполненные пользователем с помощью "инпутов"-радио-кнопок в форме.
  console.log('"event.currentTarget.elements.subscription.value" =>', event.currentTarget.elements.subscription.value);
  console.log('---------------------------------------------');
  // Выводим в лог значение свойства "subscription.email", в котором хранятся данные заполненные пользователем с помощью "инпута"-почта в форме.
  console.log('"event.currentTarget.elements.email.value" =>', event.currentTarget.elements.email.value);
  console.log('---------------------------------------------');
  // Выводим в лог значение свойства "subscription.password", в котором хранятся данные заполненные пользователем с помощью "инпута"-password в форме.
  console.log('"event.currentTarget.elements.password.value" =>', event.currentTarget.elements.password.value);
  console.log('---------------------------------------------');

  // Создаем вспомогательную переменную-объект, с набором данных полученых из формы, с помощью свойства "currentTarget.elements", стандартного объекта-события "event".
  const formDataEvent = {
    mail : event.currentTarget.elements.email.value,
    password: event.currentTarget.elements.password.value,
    subscription : event.currentTarget.elements.subscription.value,
  }
  // Выводим в лог значение вспомогательной переменной "formDataEvent"
  console.log('"formDataEvent" =>', formDataEvent);
  console.log('=============================================');
// !===========================================================
  
  
  // Испльзование специального класса "FormData" для автоматизированного сбора данных со стандартного объекта-события "event", и его свойства "currentTarget".

  // Создаем переменную "formData" и присваиваем ей значение одноименного специального класса, передавая в качестве аргумента ссылку - "event.currentTarget". Благодаря чему, этот стандартный класс, выполняет автоматический сбор всех значений со всех полей формы.
  const formData = new FormData(event.currentTarget);
  // Выводим в лог значение переменной "formData"
  console.log('"formData" =>', formData);
  console.log('---------------------------------------------');
  
  // ! Для того, чтобы получить сами значения из специального класса "formData", необходимо воспользоваться одним из методов этого объекта, которые являются по своей сути - набором стандартных обработчиков данных, получаемых из форм. 

  // Используя встроенный в специальный объект класса "formData" метод "forEach" (это НЕ стандартный метод "forEach", который используется в JS), получим набор значений из формы
  formData.forEach((value, name) => {
    console.log('onFormSubmit -> name', name);
    console.log('onFormSubmit -> value', value);
  });
};

