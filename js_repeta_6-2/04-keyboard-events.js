// Видео - 0:56:00...1:05:30

/*
 * Типы событий: 'keypress', 'keydown', 'keyup'
 * - Ограничения 'keypress'
 * - Свойства "KeyboardEvent.key" и "KeyboardEvent.code"
 */
//! Для регистрации события "нажатия" клавиш необходимо "вешать" слушателя соответствующих событий на окно браузера, используя для этой цели служебный объект "window".

// Описание типов событий клавиатуры:
// - 'keypress' - предназначено для регистрации результата нажатия только тех клавиш, которые "генерируют" ввод какого-то символа, а на остальные клавиши, служебного или вспомогательного свойства (типа "esc", "shift", "ctrl" и т.п.) - НЕ регестрирует;

// - 'keydown' - предназначено для регистрации нажатия любой клавиши на клавиатуре, в частности, когда клавиша "зажимается" вниз. Этот событие применяют при необходимости регистрации нажатия комбинации клавиш.

// - 'keyup' - предназначено для регистрации нажатия любой клавиши на клавиатуре, в частности, когда клавиша "отжимается" в верх.

// Пример использования событий клавиатуры:
// "Вешаем" слушателя на окно браузера для регистрации события - 'keydown'.
window.addEventListener('keydown', onKeydown);
// Создаем "колл-бек" функцию для события - 'keydown'. 
function onKeydown(event) {
  // Выводим в лог служебный объект-события - "KeyboardEvent".
  console.log(event);
  console.log('---------------------------------------------');
  // Выводим в лог значение свойства "key", служебного объекта-события - "KeyboardEvent".
  console.log('"event.key" =>', event.key);
  console.log('---------------------------------------------');
  // Выводим в лог значение свойства "code", служебного объекта-события - "KeyboardEvent".
  console.log('"event.key" =>', event.code);
  console.log('---------------------------------------------');
};

//! Свойство - "KeyboardEvent.key" содержит в себе значение в виде символа-обозначения, характеризующего соответствующую клавишу в активной языковой раскладке. Например, при русской раскладке, клаваша "w" - будет выдавать "ц", а при англиской - "w".
//! Свойство - "KeyboardEvent.code" содержит в себе значение в виде кода, характеризующего соответствующую клавишу. При этом, не имеет значения какая языковая раскладка активна, код клавиши - при любой раскладке будет одним и тем же.


//!============================================================


// Пример реализации прикладной задачи, по выводу текста набираемого с клавиатуры и его автоматического отображения в соответствующем текстовом теге-абзаца. С возможностью очистки ранее введенного и отображенного в теге-абзаца текста, путем нажатия на соответствующую кнопку, расположенную тоже в окне браузера.

// Алгоритм решения задачи:

// 1-е, создаем "объект-ссылок" для "привязки" существующих в HTML документе тегов, необходимых для реализации задачи.
const refs = {
  // Свойство-ссылка на тег-абзац
  output: document.querySelector('.js-output'),
  // свойство-ссылка на тег-button - "Очистить"
  clearBtn: document.querySelector('.js-clear'),
};

// 2-е "вешаем" слушателя на окно браузера для регистрации в нем события 'keypress'. 
window.addEventListener('keypress', onKeypress);

// 3-е, создаем "колл-бек" функцию для события 'keypress'
function onKeypress(event) {
  // console.log('event.key: ', event.key);
  // console.log('event.code: ', event.code);

  // Задаем значение тегу-абзацу, путем добавления символов нажатых клавиш к уже существующим символам
  refs.output.textContent += event.key;
}

// 4-е, вешаем слушателя на тег-button - "Очистить" для события 'click'
refs.clearBtn.addEventListener('click', onClearOutput);

// 5-е, создаем "колл-бек" функцию для события 'click' по тегу-button - "Очистить"
function onClearOutput() {
  // Задаем значение тегу-абзацу, в виде пустой строки для очистки его содержимого
  refs.output.textContent = '';
};

