/*
 * Свойство "innerHTML"
 * - чтение
 * - запись
 */
// Свойство "innerHTML" - возвращает всю вложенную в HTML элемент разметку (включая теги) в виде одной строки.

// Создадим переменную-ссылку на существующий в разметке HTML документа 1-й заголовок
const titleEl_1 = document.querySelector('.title_1');

// Выводим в консоль содержимое заголовка "titleEl" с помощью свойства "textContent"
console.log('"titleEl.textContent" =>', titleEl_1.textContent);
console.log('-----------------------------------------------');

// Выводим в консоль содержимое заголовка "titleEl" с помощью свойства "innerHTML"
console.log('"titleEl.innerHTML" =>', titleEl_1.innerHTML);
console.log('-----------------------------------------------');


// Свойство "innerHTML" - позволяет полность заменить существующее содержание тега.


// Заменяем содержимое тега 1-го заголовка на произвольный контент
// titleEl_1.innerHTML = '<a href="">Это ссылка)</a>'; //!!!
// Раскомментируй и смотри изменения в окне браузера

// Заменяем содержимое тега 1-го заголовка на пустую строку, полностью очищая содержимое заголовка
// titleEl_1.innerHTML = ''; //!!!
// Раскомментируй и смотри изменения в окне браузера

// Добавляем к содержимому 1-го заголовка дополнительный произвольный контент
// titleEl_1.innerHTML += '<a href="">Это ссылка)</a>'; //!!!
// Раскомментируй и смотри изменения в окне браузера

// ! Использовать свойство "innerHTML" для добавления к существующему содержимому тега дополнительный контент  - НЕ рекомендуется, т.к. данная операция является очень ёмкой по затрате ресурсов браузера!!!

// ! Лучше всего, использовать свойство "innerHTML" только тогда, когда нужно либо полностью заменить либо полностью очистить содержимое соответствующего тега.


/*
 * Вставка разметки с "insertAdjacentHTML(position, string)"
 * http://fecore.net.ua/books/m5ph3r-javascript/module-07/dom-manipulation.html#%D0%BC%D0%B5%D1%82%D0%BE%D0%B4-insertadjacenthtml
 */
// Метод "insertAdjacentHTML(position, string)" - парсит указанную строку как HTML и добавляет элемент в указанное место DOM дерева.

// Синтаксис метода:
// element.insertAdjacentHTML(position, string);
// "element" - переменная-ссылка на элемент в HTML документе.
// "position" - позиция относительно указанного в коде "element", может быть одним из 4-х значений:
// - 'beforebegin' - перед "element";
// - 'afterbegin' - внутри "element", в сомом начале контента;
// - 'beforend' - внутри "element", в самом конце контента;
// - 'afterend' - после "element".

// Создадим переменную-ссылку на существующий в разметке HTML документа 2-й заголовок
const titleEl = document.querySelector('.title');

// Используем метод "insertAdjacentHTML(position, string)" для вставки дополнительного контента во 2-й заголовок
titleEl.insertAdjacentHTML(
  'beforeend',
  '<a href="" class="title__link">Это ссылка)</a>',
);

// ! Метод "insertAdjacentHTML(position, string)" - рекомендовано использовать в тех случаях, когда необходимо дополнить каким-либо контентом существующий тег.
